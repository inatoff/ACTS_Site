@model ACTS.Core.Entities.News

@{
	ViewBag.CurrentPage = Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath));
	ViewBag.Title = "Edit news";
}

@*<script type="text/javascript">
	//TODO: как вариант можно заменить на CK Editor
	tinymce.init({
		selector: 'textarea.tinymceEditor',  // change this value according to your HTML
		//language: "uk",
		//TODO: Rustam help!! lang and language_url don`t work
		//TODO: if mobile :
		//toolbar_items_size: 'small',
		theme: 'modern',
		resize: true,
		skin: "lightgray",
		plugins: [
	"advlist autolink autosave link image lists charmap print preview hr anchor pagebreak spellchecker",
	"searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
	"table contextmenu directionality emoticons textcolor paste fullpage textcolor colorpicker textpattern"
		],

		toolbar1: "undo redo | newdocument fullpage | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | styleselect formatselect fontselect fontsizeselect",
		toolbar2: "cut copy paste | searchreplace | bullist numlist | outdent indent blockquote |  link unlink anchor image media code | insertdatetime preview | forecolor backcolor",
		toolbar3: "table | hr removeformat | subscript superscript | charmap emoticons | print fullscreen | ltr rtl | spellchecker | visualchars visualblocks nonbreaking pagebreak restoredraft",

		//	plugins: [
		//'advlist autolink lists link image charmap print preview hr anchor pagebreak',
		//'searchreplace wordcount visualblocks visualchars code fullscreen',
		//'insertdatetime media nonbreaking save table contextmenu directionality',
		//'emoticons paste textcolor colorpicker textpattern imagetools autosave'
		//	],
		//	menubar: "file edit insert view format table tools",
		//	toolbar1: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
		//	toolbar2: 'print preview media | forecolor backcolor emoticons anchor',
		image_advtab: true,
		paste_data_images: true,
	});
</script>*@

@section Styles{
	@Styles.Render("~/Content/css/bootstrap-fileinput")
}

@section Scripts {
	@Scripts.Render("~/bundles/tinymce")
	<script src="~/Scripts/Admin/initTinyEditor.js"></script>
	@Scripts.Render("~/bundles/bootstrap-fileinput")
	<script>
		$(document).on('ready', function() {
			$("#input-image").fileinput({
				previewFileType: "image",
				browseClass: "btn btn-success",
				browseLabel: "Pick Image",
				browseIcon: "<i class=\"glyphicon glyphicon-picture\"></i> ",
				removeClass: "btn btn-danger",
				removeLabel: "Delete",
				removeIcon: "<i class=\"glyphicon glyphicon-trash\"></i> ",
				showUpload: false,
				maxFileSize: 5120
			});
		});
	</script>
}

<div class="row">
	<div class="col-xs-12">
		<div class="box box-primary">
			<div class="box-header with-border">
				<h3 class="box-title"> Redact @Model.Title</h3>
			</div>
			<!-- /.box-header -->
			<!-- form start -->
			@*TODO Rustam помоги сделать что бы когда оно проверяет и там неправильные даные то виглядела как http://bootstrap-3.ru/css.php#forms-control-validation*@
			@using (Html.BeginForm("Edit", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
			{
				<div class="box-body">
					@Html.AntiForgeryToken()

					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.NewsId)
					@Html.HiddenFor(model => model.ImageMimeType)
					@Html.HiddenFor(model => model.ImageData)

					<div class="form-group">
						@Html.LabelFor(model => model.Title)
						@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
						@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.ImageData)
						<div>
							@if (Model.ImageData == null)
							{
								@:None
							} else
							{
								<img alt="News image" class="img-thumbnail" style="max-width:100%" src="@Url.Action("GetImage", "News", new { area = "", Model.NewsId })" />
							}
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.ImageData, "Upload new image:")
						<input id="input-image" class="file-loading" accept="image/*" type="file" name="Image" />
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Content)
						@Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
						@Html.TextAreaFor(model => model.Content, new { @class = "tinymceEditor", placeholder = "Content" })
					</div>

				</div>
					<!-- /.box-body -->

				<div class="box-footer">
					<button type="submit" class="btn btn-primary">
						<i class="fa fa-save"></i>&nbsp;Save
					</button>
					<a type="button" class="btn btn-default pull-right" href="@Url.Action("Table", "News")">
						<i class="fa fa-times"></i>&nbsp;Cancel and return to Table
					</a>
				</div>
			}
			<!-- form end -->
		</div>
	</div>
</div>
