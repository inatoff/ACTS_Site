@model ACTS.UI.Areas.Admin.Models.MyAccountViewModel

@{
	ViewBag.CurrentPage = Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath));
	ViewBag.Title = "My account";
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval-admin")
	@Scripts.Render("~/bundles/expressive")
	<script type="text/javascript">
		var deleteForm = $("#deleteForm")

		deleteForm.keyup(function () {
			$("#deleteForm button[type=submit]")
				.prop("disabled", !deleteForm.valid());
		});
	</script>
}

<div class="row">
	<div class="col-xs-12">
		<div class="box box-primary">
			<div class="box-header with-border">
				<div class="box-title"> Change user name</div>
			</div>
			@using (Html.BeginForm("ChangeUserName", "MyAccount", FormMethod.Post))
			{
				<div class="box-body">
					@Html.AntiForgeryToken()
					@Html.HiddenFor(model => model.CurrentUserName)
					<p class="help-block">@Html.DescriptionFor(model => model.UserName)</p>

					<div class="form-group">
						@Html.LabelFor(model => model.UserName, new { @class = "control-label" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-user"></i></span>
							@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "User name" } })
						</div>
						@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger help-block" }, "p")
					</div>

					<button type="submit" class="btn btn-primary">
						<i class="fa fa-save">&nbsp;</i> Update user name
					</button>
				</div>
			}
		</div>
	</div>

	<div class="col-xs-12">
		<div class="box box-primary">
			<div class="box-header with-border">
				<div class="box-title"> Change email</div>
			</div>
			@using (Html.BeginForm("ConfirmChangeEmail", "MyAccount", FormMethod.Post))
			{
				<div class="box-body">
					@Html.AntiForgeryToken()
					@Html.HiddenFor(model => model.CurrentEmail)
					<p class="help-block">@Html.DescriptionFor(model => model.Email)</p>

					<div class="form-group">
						@Html.LabelFor(model => model.Email, new { @class = "control-label" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-envelope"></i></span>
							@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
						</div>
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger help-block" }, "p")
					</div>

					<button type="submit" class="btn btn-primary">
						<i class="fa fa-save">&nbsp;</i>Update email
					</button>
				</div>
			}
		</div>
	</div>

	<div class="col-xs-12">
		<div class="box box-primary">
			<div class="box-header with-border">
				<div class="box-title">Change password</div>
			</div>
			@using (Html.BeginForm("ChangePassword", "MyAccount", FormMethod.Post))
			{
				<div class="box-body">
					@Html.AntiForgeryToken()

					<div class="form-group">
						@Html.LabelFor(model => model.CurrentPassword, new { @class = "control-label" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-key "></i></span>
							@Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Current password" } })
						</div>
						@Html.ValidationMessageFor(model => Model.CurrentPassword, "", new { @class = "text-danger help-block" }, "p")
					</div>

					<div class="form-group">
						<a class="form-control-static" href="@Url.Action("ForgotPassword", "Account", new { area = "", returnUrl = Url.Action() })"><h4>Forgot password?</h4></a>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.NewPassword, new { @class = "control-label" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-key"></i></span>
							@Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "New password" } })
						</div>
						@Html.ValidationMessageFor(model => Model.NewPassword, "", new { @class = "text-danger help-block" }, "p")
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-key"></i></span>
							@Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm password" } })
						</div>
						@Html.ValidationMessageFor(model => Model.ConfirmPassword, "", new { @class = "text-danger help-block" }, "p")
					</div>

					<button type="submit" class="btn btn-primary">
						<i class="fa fa-save">&nbsp;</i>Update password
					</button>
				</div>
			}
		</div>
	</div>

	<div class="col-xs-12">
		<div class="box box-danger">
			<div class="box-header with-border">
				<div class="box-title">Delete account</div>
			</div>
			<div class="box-body">
				<p>	Once you delete your account, there is no going back. Please be certain.</p>

				<!-- Button trigger modal -->
				<button type="button" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal"><i class="fa fa-trash-o">&nbsp;</i>Delete your account</button>

				<!-- Modal -->
				<div class="modal modal-danger fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel">
					<div class="vertical-alignment-helper">
						<div class="modal-dialog vertical-align-center" role="document">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
									<h4 class="modal-title" id="deleteModalLabel">Are you sure you want to do this?</h4>
								</div>

								@using (Html.BeginForm("DeleteCurrent", "MyAccount", FormMethod.Post, new { id = "deleteForm" }))
								{
									<div class="modal-body">
										@Html.AntiForgeryToken()
										@Html.HiddenFor(model => model.CurrentUserName)
										@Html.HiddenFor(model => model.CurrentEmail)

										<div class="form-group">
											@Html.LabelFor(model => model.EmailOrUserName, new { @class = "control-label" })
											@Html.EditorFor(model => model.EmailOrUserName, new { htmlAttributes = new { @class = "form-control" } })
										</div>

										<div class="form-group">
											<label class="control-label" for="ConfirmationPhrase">To verify, type <span class="confirmation_phrase noselect"> delete my account</span> below:</label>
											@Html.EditorFor(model => model.ConfirmationPhrase, new { htmlAttributes = new { @class = "form-control" } })
										</div>
									</div>

									<div class="modal-footer">
										<button type="submit" disabled class="btn btn-outline btn-block btn-lg">Delete this account</button>
									</div>
								}
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

