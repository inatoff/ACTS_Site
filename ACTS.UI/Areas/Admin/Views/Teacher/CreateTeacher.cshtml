@model ACTS.Core.Entities.Teacher

@{
	ViewBag.CurrentPage = Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath));
	ViewBag.CurrentTreeView = "Create";
	ViewBag.Title = "Create teacher";
}

@section Styles{
	@Styles.Render("~/Content/css/bootstrap-fileinput")
}

@section Scripts{
	@Scripts.Render("~/bundles/fileinput")
	<script>
		$(document).on('ready', function () {
			$("#input-image").fileinput({
				previewFileType: "image",
				browseClass: "btn btn-success",
				browseLabel: "Pick Image",
				browseIcon: "<i class=\"glyphicon glyphicon-picture\"></i> ",
				removeClass: "btn btn-danger",
				removeLabel: "Delete",
				removeIcon: "<i class=\"glyphicon glyphicon-trash\"></i> ",
				showUpload: false,
				maxFileSize: 5120
			});
		});
	</script>
}

<div class="row">
	<div class="col-xs-12">
		<div class="box box-primary">
			<div class="box-header with-border">
				<h3 class="box-title"> Create teacher</h3>
			</div>
			<!-- /.box-header -->
			<!-- form start -->
			@*TODO Rustam помоги сделать что бы когда оно проверяет и там неправильные даные то виглядела как http://bootstrap-3.ru/css.php#forms-control-validation*@
			@using (Html.BeginForm("Create", "Teacher", FormMethod.Post, new { enctype = "multipart/form-data" }))
			{
				<div class="box-body">
					@Html.AntiForgeryToken()

					@Html.ValidationSummary(true, "", new { @class = "text-danger" })

					<div class="form-group">
						@Html.LabelFor(model => model.FullName)
						@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
						@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Full name" } })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Position)
						@Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
						@Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control", placeholder = "Position", style = "width: 100%;" } })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Degree)
						@Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
						@Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control", placeholder = "Degree" } })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Email)
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-fw fa-envelope"></i></span>
							@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Intellect)
						@Html.ValidationMessageFor(model => model.Intellect, "", new { @class = "text-danger" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-fw fa-info"></i></span>
							@Html.EditorFor(model => model.Intellect, new { htmlAttributes = new { @class = "form-control", placeholder = "Intellect url" } })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Vk)
						@Html.ValidationMessageFor(model => model.Vk, "", new { @class = "text-danger" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-fw fa-vk"></i></span>
							@Html.EditorFor(model => model.Vk, new { htmlAttributes = new { @class = "form-control", placeholder = "Vkontakte url" } })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Twitter)
						@Html.ValidationMessageFor(model => model.Twitter, "", new { @class = "text-danger" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-fw fa-twitter"></i></span>
							@Html.EditorFor(model => model.Twitter, new { htmlAttributes = new { @class = "form-control", placeholder = "Twitter url" } })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Facebook)
						@Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-fw fa-facebook"></i></span>
							@Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control", placeholder = "Facebook url" } })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Photo)
						<input id="input-image" class="file-loading" accept="image/*" type="file" name="Image" />
					</div>
				</div>
					<!-- /.box-body -->

				<div class="box-footer">
					<button type="submit" class="btn btn-primary">
						<i class="fa fa-save"></i>&nbsp;Create
					</button>
					<a type="button" class="btn btn-default pull-right" href="@Url.Action("Table", "Teacher")">
						<i class="fa fa-undo"></i>&nbsp;Cancel and return to Table
					</a>
				</div>
			}
			<!-- form end -->
		</div>
	</div>
</div>
