@model ACTS.Core.Entities.Employee

@{
	ViewBag.CurrentPage = Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath));
	ViewBag.Title = "Edit employee";
}

@section Styles{
	@Styles.Render("~/Content/css/bootstrap-fileinput")
}

@section Scripts{
	@Scripts.Render("~/bundles/fileinput")
	<script>
		$(document).on('ready', function() {
			$("#input-image").fileinput({
				previewFileType: "image",
				browseClass: "btn btn-success",
				browseLabel: "Pick Image",
				browseIcon: "<i class=\"glyphicon glyphicon-picture\"></i> ",
				removeClass: "btn btn-danger",
				removeLabel: "Delete",
				removeIcon: "<i class=\"glyphicon glyphicon-trash\"></i> ",
				showUpload: false,
				maxFileSize: 5120
			});
		});
	</script>
}

<div class="row">
	<div class="col-xs-12">
		<div class="box box-primary">
			<div class="box-header with-border">
				<h3 class="box-title">Redact @Model.FullName</h3>
			</div>
			<!-- /.box-header -->
			<!-- form start -->
			@*TODO Rustam помоги сделать что бы когда оно проверяет и там неправильные даные то виглядела как http://bootstrap-3.ru/css.php#forms-control-validation*@
			@using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
			{
				<div class="box-body">
					@Html.AntiForgeryToken()

					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.EmployeeId)
					@Html.HiddenFor(model => model.Photo)
					@Html.HiddenFor(model => model.PhotoMimeType)

					<div class="form-group">
						@Html.LabelFor(model => model.FullName)
						@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
						@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Full name" } })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Position)
						@Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
						@Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control", placeholder = "Position", style = "width: 100%;" } })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Photo)
						<div>
							@if (Model.Photo == null)
							{
								@:None
							} else
							{
								<img alt="Employee image" class="img-thumbnail" style="max-width:100%" src="@Url.Action("GetImage", "Employee", new { area = "", Model.EmployeeId })" />
							}
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.Photo, "Upload new photo:")
						<input id="input-image" class="file-loading" accept="image/*" type="file" name="Image" />
					</div>
				</div>
					<!-- /.box-body -->

					<div class="box-footer">
						<button type="submit" class="btn btn-lg btn-primary">
							<i class="fa fa-save"></i>&nbsp;Save
						</button>
						<a type="button" class="btn btn-lg btn-default pull-right" href="@Url.Action("Table", "Employee")">
							<i class="fa fa-times"></i>&nbsp;Cancel and return to Table
						</a>
					</div>
				}
			<!-- form end -->
		</div>
	</div>
</div>

