@model ACTS.UI.Areas.Admin.Models.EditAccountViewModel


@{
	ViewBag.CurrentPage = Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath));
	ViewBag.Title = "Edit account";
}

@section Styles{
	<!-- iCheck -->
	<link href="~/Content/iCheck/square/blue.css" rel="stylesheet" />
}

@section Scripts{
	<!-- iCheck -->
	<script src="~/Scripts/jquery.icheck.min.js"></script>
	<script>
			$(function () {
				$('input').iCheck({
					checkboxClass: 'icheckbox_square-blue',
					radioClass: 'iradio_square-blue',
					increaseArea: '20%' // optional
				});
			});
	</script>
}

<div class="row">
	<div class="col-xs-12">
		<div class="box box-primary">
			<div class="box-header with-border">
				<h3 class="box-title">Redact @Model.UserName</h3>
			</div>
			<!-- /.box-header -->
			<!-- form start -->
			@*TODO Rustam помоги сделать что бы когда оно проверяет и там неправильные даные то виглядела как http://bootstrap-3.ru/css.php#forms-control-validation*@
			@using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
			{
				<div class="box-body">
					@Html.AntiForgeryToken()

					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Id)

					<div class="form-group">
						@Html.LabelFor(model => model.UserName)
						@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
						@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "User name" } })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Email)
						@Html.ValidationMessageFor(model => Model.Email, "", new { @class = "text-danger" })
						<div class="input-group">
							<span class="input-group-addon"><i class="fa fa-envelope"></i></span>
							@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Roles)
						@Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
						@Html.EditorFor(model => model.Roles)
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.PairTeacherId)
						@Html.ValidationMessageFor(model => model.PairTeacherId, "", new { @class = "text-danger" })
						@Html.DropDownListFor(model => model.PairTeacherId, ViewBag.Teachers as IEnumerable<SelectListItem>, "The teacher is absent.", new { @class = "form-control" })
					</div>
				</div>
				<!-- /.box-body -->

				<div class="box-footer">
					<button type="submit" class="btn btn-primary">
						<i class="fa fa-save"></i>&nbsp;Save
					</button>
					<a type="button" class="btn btn-default pull-right" href="@Url.Action("Table", "Account")">
						<i class="fa fa-times"></i>&nbsp;Cancel and return to Table
					</a>
				</div>
			}
			<!-- form end -->
		</div>
	</div>
</div>