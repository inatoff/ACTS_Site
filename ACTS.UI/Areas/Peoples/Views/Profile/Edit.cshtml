@model ACTS.UI.Areas.Peoples.Models.TeacherAccountViewModel
@{
}
@Styles.Render("~/Content/css")
@Styles.Render("~/Content/css/admin")

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval-admin")
    @Scripts.Render("~/bundles/expressive")
}
<div class="row">
    <div class="col-xs-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">@GlobalRes.Redact</h3>
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4>@Model.FullName</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Degree, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-9 col-lg-9">
                            @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control", placeholder = GlobalRes.Degree } })
                            @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-red" }, "p")
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-8 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-fw fa-envelope"></i></span>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = GlobalRes.Email } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-red" }, "p")
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AccountEmail, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-8 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-fw fa-envelope"></i></span>
                                @Html.EditorFor(model => model.AccountEmail, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.AccountEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-8 col-lg-9">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewPassword, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-8 col-lg-9">
                            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-8 col-lg-9">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Intellect, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-8 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-fw fa-info"></i></span>
                                @Html.EditorFor(model => model.Intellect, new { htmlAttributes = new { @class = "form-control", placeholder = GlobalRes.IntellectUrl } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Intellect, "", new { @class = "text-red" }, "p")
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Vk, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-8 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-fw fa-vk"></i></span>
                                @Html.EditorFor(model => model.Vk, new { htmlAttributes = new { @class = "form-control", placeholder = GlobalRes.VkontakteUrl } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Vk, "", new { @class = "text-red" }, "p")
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Twitter, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-8 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-fw fa-twitter"></i></span>
                                @Html.EditorFor(model => model.Twitter, new { htmlAttributes = new { @class = "form-control", placeholder = GlobalRes.TwitterUrl } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Twitter, "", new { @class = "text-red" }, "p")
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Facebook, new { @class = "col-md-3 col-lg-2 control-label" })
                        <div class="col-md-8 col-lg-9">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-fw fa-facebook"></i></span>
                                @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control", placeholder = GlobalRes.FacebookUrl } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-red" }, "p")
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HasBlog, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.HasBlog)
                                @Html.ValidationMessageFor(model => model.HasBlog, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Init Personal Page", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ActionLink("InitPersonalPage", "InitPersonalPage", "Profile")
                        </div>
                    </div>
                    <div class="panel-body">
                        @if (Model.Disciplines != null)
                        {
                            <ul>
                                @foreach (var discipline in Model.Disciplines)
                                {
                                    <li>@discipline.Value</li>
                                }
                            </ul>
                        }
                    </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="submit" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                    <div id="EditBlogPanel" class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Greetings, new { @class = "col-md-3 col-lg-2 control-label" })
                            <div class="col-md-8 col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-fw fa-hand-spock-o"></i></span>
                                    @Html.EditorFor(model => model.Greetings, new { htmlAttributes = new { @class = "form-control", placeholder = GlobalRes.BlogGreetingsPlaceHolder } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Greetings, "", new { @class = "text-red" }, "p")
                            </div>
                        </div>
                    </div>

                        }
                    </div>
                </div>
            </div>