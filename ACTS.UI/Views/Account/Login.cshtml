@model ACTS.UI.Models.LoginViewModel
@{
	Layout = null;
}

<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<title>@GlobalRes.SignIn</title>
	<!-- Tell the browser to be responsive to screen width -->
	<meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
	@Styles.Render("~/Content/css")
	<!-- Theme style -->
	<link href="@Url.Content("~/Content/AdminLTE.css")" rel="stylesheet" />
	<link href="@Url.Content("~/Content/Login.css")" rel="stylesheet" />
	<!-- iCheck -->
	@Styles.Render("~/Content/css/iCheck/blue")

	<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
	<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
	<!--[if lt IE 9]>
	<script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
	<script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
	<![endif]-->
</head>
<body class="hold-transition login-page">
	<div class="login-box">
		<div class="login-logo">
			@if (string.IsNullOrWhiteSpace(ViewBag.ReturnUrl) ? false : ViewBag.ReturnUrl.ToLower().StartsWith("/admin"))
			{
				<a href="@Url.Action("Dashboard","Admin", new { area = "Admin" })"><b>@GlobalRes.Admin</b>@GlobalRes.ACTS</a>
			}
			else
			{
				<a href="@Url.Action("Index","Home")"><b>@GlobalRes.ACTS</b>@GlobalRes.KPI</a>
			}
		</div>
		<!-- /.login-logo -->
		<div class="login-box-body">
			<p class="login-box-msg">@GlobalRes.LoginMsg</p>

			@using (Html.BeginForm("Login", "Account", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
			{
				@Html.AntiForgeryToken()
				@Html.ValidationSummary(true, "", new { @class = "text-red" })

				@Html.ValidationMessageFor(model => Model.EmailOrUserName, "", new { @class = "text-red" }, "p")
				<div class="form-group has-feedback">
					@Html.TextBoxFor(m => m.EmailOrUserName, new { @class = "form-control", placeholder = GlobalRes.EmailOrUserName, autofocus = true, tabindex = "1" })
					<span class="glyphicon glyphicon-envelope form-control-feedback"></span>
				</div>

				@Html.ValidationMessageFor(model => Model.Password, "", new { @class = "text-red" }, "p")
				<div class="form-group has-feedback">
					@Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = GlobalRes.Password, tabindex = "2" })
					<span class="glyphicon glyphicon-lock form-control-feedback"></span>
				</div>

				<div class="row">
					<div class="col-xs-8">
						<div class="checkbox icheck">
							@Html.CheckBoxFor(m => m.RememberMe)
							@Html.LabelFor(m => m.RememberMe)
						</div>
					</div>
					<!-- /.col -->
					<div class="col-xs-4">
						<button type="submit" class="btn btn-primary btn-block btn-flat" tabindex="3">@GlobalRes.SignIn</button>
					</div>
					<!-- /.col -->
				</div>
			}
			@if (string.IsNullOrWhiteSpace(ViewBag.ReturnUrl))
			{
				<a href="@Url.Action("ForgotPassword", "Account", new { tabindex = "4" })"> @GlobalRes.IForgotMyPassword</a>
			}
			else
			{
				<a href="@Url.Action("ForgotPassword", "Account", new { tabindex = "4", returnUrl = Url.Action("Login", "Account", new { returnUrl = ViewBag.ReturnUrl }) })">
					@GlobalRes.IForgotMyPassword
				</a>
			}

		</div>
		<!-- /.login-box-body -->
	</div>
	<!-- /.login-box -->
	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/bootstrap")
	<!-- iCheck -->
	@Scripts.Render("~/bundles/iCheck")
</body>
</html>